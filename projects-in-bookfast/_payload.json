[{"data":1,"prerenderedAt":133},["ShallowReactive",2],{"$PO0ZRGd7KQ":3},{"id":4,"title":5,"body":6,"description":110,"extension":123,"meta":124,"navigation":129,"path":130,"seo":131,"stem":126,"__hash__":132},"content/projects-in-bookfast.md","Projects In Bookfast",{"type":7,"value":8,"toc":109},"minimal",[9,14,24,28,44,49,56,60,65,68,71,74,78,81,84,87,90,94,97,100,103,106],[10,11,13],"h2",{"id":12},"開發-20-電商系統負責首頁以及搜尋介面以及功能開發","開發 2.0 電商系統，負責首頁以及搜尋介面以及功能開發",[15,16,17,23],"p",{},[18,19,20],"a",{"href":20,"rel":21},"https://ec.bookfastpos.com/X815ybnbOG/",[22],"nofollow"," (demo 網站，若失效請參考下圖)",[10,25,27],{"id":26},"tech-stack","Tech Stack",[29,30,31,35,38,41],"ul",{},[32,33,34],"li",{},"Vue 2",[32,36,37],{},"Nuxt 2",[32,39,40],{},"Vuex 3",[32,42,43],{},"Vuetify 2",[45,46,48],"h3",{"id":47},"mobile-介面","Mobile 介面",[15,50,51],{},[52,53],"img",{"alt":54,"src":55},"Image","https://github.com/user-attachments/assets/6fa745d9-a6d9-4110-9bb1-44a33048281c",[45,57,59],{"id":58},"pc-介面","PC 介面",[15,61,62],{},[52,63],{"alt":54,"src":64},"https://github.com/user-attachments/assets/8806ac83-c5cb-431a-a78d-2c026be88247",[10,66,67],{"id":67},"複雜度",[15,69,70],{},"在這個專案中，我負責開發的是一個健身類 SaaS 平台的首頁頁面，設計上支援完整的手機與桌機雙版本設計，乍看是個畫面豐富、互動感強烈的行銷頁，但如果你是一位前端工程師，就知道這其實是一次非常扎實的前端架構挑戰。",[15,72,73],{},"以下是我想讓你知道的——這不是單純的美化，而是技術與體驗的深度整合：",[45,75,77],{"id":76},"一頁兩版結構雙軌responsive-design-的真正挑戰","🧩 一頁兩版，結構雙軌：Responsive Design 的真正挑戰",[15,79,80],{},"不是把畫面「縮小」就叫做手機版。這個首頁在設計階段就是針對 Mobile 和 Desktop 採用完全不同的 UI 結構：",[15,82,83],{},"手機版：強調「上下導覽」與單手操作，例如漢堡選單、橫向滑動課程卡片、垂直資訊排列。",[15,85,86],{},"桌機版：運用更多「水平空間」、區塊對齊、資訊密度高，需要明確的視覺階層。",[15,88,89],{},"這意味著，我不只是「響應式調整」畫面，而是針對不同裝置開發了兩套 UI 邏輯與互動行為。每一個畫面區塊都需要在 CSS / Media Query 中建立細緻的 breakpoints，並控制元件的可見性、行為與狀態切換。",[45,91,93],{"id":92},"可組合的動態元件架構維護性與彈性缺一不可","📦 可組合的動態元件架構：維護性與彈性缺一不可",[15,95,96],{},"首頁中有大量的「課程資訊卡片」、「教練推薦」、「時段選單」等等，這些不是單純的靜態內容，而是：",[15,98,99],{},"動態資料綁定後端 API",[15,101,102],{},"每張卡片支援不同的樣式變化與狀態顯示",[15,104,105],{},"可配置（例如未來可能會新增場館、課程分類）",[15,107,108],{},"為了讓整體系統具有擴展性，我採用Component-based 架構進行拆分，每個元件都支援 slot / props 傳入不同資料，實作上使用像是 v-for 搭配 v-bind 進行資料注入，同時支援 Skeleton Loading 狀態與 Error Handling 機制。",{"title":110,"searchDepth":111,"depth":111,"links":112},"",2,[113,114,119],{"id":12,"depth":111,"text":13},{"id":26,"depth":111,"text":27,"children":115},[116,118],{"id":47,"depth":117,"text":48},3,{"id":58,"depth":117,"text":59},{"id":67,"depth":111,"text":67,"children":120},[121,122],{"id":76,"depth":117,"text":77},{"id":92,"depth":117,"text":93},"md",{"createdAt":125,"url":126,"tags":127},"2025-04-07 22:31:00","projects-in-bookfast",[128],"工作",true,"/projects-in-bookfast",{"title":5,"description":110},"GlijB8TyvLeOQwryqtdctOmNBRWMrznXQkEZSJff5Ck",1744039164534]